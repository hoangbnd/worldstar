@model ChangePasswordModel
@using Nop.Web.Models.Customer;
@{
  Layout = "~/Views/Shared/_ColumnsTwoCustomer.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ChangePassword })
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="page account-page change-password-page">
        <div class="page-title">
            <h1 class="page-header">@T("Account.MyAccount") - @T("Account.ChangePassword")</h1>
        </div>
        <div class="page-body">
            @if (!String.IsNullOrEmpty(Model.Result))
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            @{
                var validationSummary = Html.ValidationSummary(true);
            }
            @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                <div class="message-error">@validationSummary</div>
            }
            <div class="row fieldset">
                <div class="col-md-8 form-fields">
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OldPassword, new { @class = "col-md-5 control-label label-customer" }, ":")
                            <div class="col-sm-7">
                                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control form-customer" } })
                            </div>
                            @*@Html.RequiredHint()*@
                            @Html.ValidationMessageFor(model => model.OldPassword, null, new { @class = "col-sm-offset-5 col-sm-7" })
                            <div class="clearfix"></div>
                        </div>
                      <div class="form-group">
                        @Html.LabelFor(model => model.NewPassword, new { @class = "col-md-5 control-label label-customer" }, ":")
                        <div class="col-sm-7">
                          @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control form-customer" } })
                        </div>
                        @*@Html.RequiredHint()*@
                        @Html.ValidationMessageFor(model => model.NewPassword, null, new { @class = "col-sm-offset-5 col-sm-7" })
                        <div class="clearfix"></div>
                      </div>
                      <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmNewPassword, new { @class = "col-md-5 control-label label-customer" }, ":")
                        <div class="col-sm-7">
                          @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control form-customer" } })
                        </div>
                        @*@Html.RequiredHint()*@
                        @Html.ValidationMessageFor(model => model.ConfirmNewPassword, null, new { @class = "col-sm-offset-5 col-sm-7" })
                        <div class="clearfix"></div>
                      </div>
                    </div>
                </div>
            </div>
            <div class="buttons">
                <input type="submit" class="btn btn-default btn-customer change-password-button" value="@T("Account.ChangePassword.Button")" />
            </div>
          <div class="white-space space-medium"></div>
        </div>
    </div>
}
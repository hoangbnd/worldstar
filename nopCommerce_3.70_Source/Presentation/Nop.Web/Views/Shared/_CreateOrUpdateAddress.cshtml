@model AddressModel
@using Nop.Web.Models.Common;
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}
@Html.HiddenFor(model => model.Id)
<div class="edit-address">
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new { @class = "col-md-5 control-label label-customer" }, ":")
        <div class="col-sm-7">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control form-customer" } })
        </div>
        @*@Html.RequiredHint()*@
        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "col-sm-offset-5 col-sm-7" })
        <div class="clearfix"></div>
    </div>
  <div class="form-group">
    @Html.LabelFor(model => model.LastName, new { @class = "col-md-5 control-label label-customer" }, ":")
    <div class="col-sm-7">
      @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control form-customer" } })
    </div>
    @*@Html.RequiredHint()*@
    @Html.ValidationMessageFor(model => model.LastName, null, new { @class = "col-sm-offset-5 col-sm-7" })
    <div class="clearfix"></div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Email, new { @class = "col-md-5 control-label label-customer" }, ":")
    <div class="col-sm-7">
      @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-customer" } })
    </div>
    @*@Html.RequiredHint()*@
    @Html.ValidationMessageFor(model => model.Email, null, new { @class = "col-sm-offset-5 col-sm-7" })
    <div class="clearfix"></div>
  </div>
    @if (Model.CompanyEnabled)
    {
      <div class="form-group">
        @Html.LabelFor(model => model.Company, new { @class = "col-md-5 control-label label-customer" }, ":")
        <div class="col-sm-7">
          @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control form-customer" } })
        </div>
        @*@Html.RequiredHint()*@
        @Html.ValidationMessageFor(model => model.Company, null, new { @class = "col-sm-offset-5 col-sm-7" })
        <div class="clearfix"></div>
      </div>  
    }
    @if (Model.CountryEnabled)
    {
      <div class="form-group">
        @Html.LabelFor(model => model.CountryId, new { @class = "col-md-5 control-label label-customer" }, ":")
          <div class="col-sm-7">
              @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries)
              @*@Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control form-customer" } })*@
            <script type="text/javascript">
              $(function () {
                $("select[name='BillingNewAddress.CountryId']").addClass("form-control form-customer");
              });
            </script>

          </div>
        @*@Html.RequiredHint()*@
        @Html.ValidationMessageFor(model => model.Company, null, new { @class = "col-sm-offset-5 col-sm-7" })
        <div class="clearfix"></div>
      </div> 
    }

    @*@if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="inputs">
            @Html.LabelFor(model => model.StateProvinceId, new { }, ":")
            @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates)
            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
            @Html.ValidationMessageFor(model => model.StateProvinceId)
        </div>
    }*@
    @if (Model.CityEnabled)
    {
       <div class="form-group">
          @Html.LabelFor(model => model.City, new { @class = "col-md-5 control-label label-customer" }, ":")
          <div class="col-sm-7">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control form-customer" } })
          </div>
          @*@Html.RequiredHint()*@
          @Html.ValidationMessageFor(model => model.City, null, new { @class = "col-sm-offset-5 col-sm-7" })
          <div class="clearfix"></div>
      </div> 
    }
    @if (Model.StreetAddressEnabled)
    {
      <div class="form-group">
        @Html.LabelFor(model => model.Address1, new { @class = "col-md-5 control-label label-customer" }, ":")
        <div class="col-sm-7">
          @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control form-customer" } })
        </div>
        @*@Html.RequiredHint()*@
        @Html.ValidationMessageFor(model => model.Address1, null, new { @class = "col-sm-offset-5 col-sm-7" })
        <div class="clearfix"></div>
      </div>  
    }
    @if (Model.StreetAddress2Enabled)
    {
      <div class="form-group">
        @Html.LabelFor(model => model.Address2, new { @class = "col-md-5 control-label label-customer" }, ":")
        <div class="col-sm-7">
          @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control form-customer" } })
        </div>
        @*@Html.RequiredHint()*@
        @Html.ValidationMessageFor(model => model.Address2, null, new { @class = "col-sm-offset-5 col-sm-7" })
        <div class="clearfix"></div>
      </div>   
    }
    @if (Model.PhoneEnabled)
    {
      <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-md-5 control-label label-customer" }, ":")
        <div class="col-sm-7">
          @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control form-customer" } })
        </div>
        @*@Html.RequiredHint()*@
        @Html.ValidationMessageFor(model => model.PhoneNumber, null, new { @class = "col-sm-offset-5 col-sm-7" })
        <div class="clearfix"></div>
      </div> 
    }
    @if (Model.CustomAddressAttributes.Count > 0)
    {
        @Html.Partial("_AddressAttributes", Model.CustomAddressAttributes)
    }
</div>

@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
  var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}

@if (Model.Items.Count > 0)
{
  @*@Html.Partial("_OrderReviewData", Model.OrderReviewData)*@
  if (Model.Warnings.Count > 0)
  {
    <div class="message-error">
      <ul>
        @foreach (var warning in Model.Warnings)
        {
          <li>@warning</li>
        }
      </ul>
    </div>
  }
  using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data" }))
  {
    @Html.AntiForgeryToken()

    if (Model.IsEditable)
    {
      @Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())
    }
    if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
    {
      <div class="selected-checkout-attributes" style="display: none">
        @Html.Raw(Model.CheckoutAttributeInfo)
      </div>
    }
    <div class="row">
      <div class="col-xs-12 col-md-12">
        <div class="block">
          <div class="table-wrapper">
            <table class="cart">
              <colgroup>
                @if (Model.IsEditable)
                {
                  <col width="1" />
                }
                @if (Model.ShowSku)
                {
                  <col width="1" />
                }
                @if (Model.ShowProductImages)
                {
                  <col width="1" />
                }
                <col />
                <col width="1" />
                <col width="1" />
                <col width="1" />
              </colgroup>
              <thead>
                <tr>
                  @if (Model.IsEditable)
                  {
                    <th class="remove-from-cart">
                      @T("ShoppingCart.Remove")
                    </th>
                  }
                  @if (Model.ShowSku)
                  {
                    <th class="sku">
                      @T("ShoppingCart.SKU")
                    </th>
                  }
                  @if (Model.ShowProductImages)
                  {
                    <th class="product-picture">
                      @T("ShoppingCart.Image")
                    </th>
                  }
                  <th class="product">
                    @T("ShoppingCart.Product(s)")
                  </th>
                  <th class="unit-price">
                    @T("ShoppingCart.UnitPrice")
                  </th>
                  <th class="quantity">
                    @T("ShoppingCart.Quantity")
                  </th>
                  <th class="subtotal">
                    @T("ShoppingCart.ItemTotal")
                  </th>
                </tr>
              </thead>
              <tbody>
                @foreach (var item in Model.Items)
                {
                  <tr>
                    @if (Model.IsEditable)
                    {
                      <td class="remove-from-cart">
                        <label class="td-title">@T("ShoppingCart.Remove"):</label>
                        <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                      </td>
                    }
                    @if (Model.ShowSku)
                    {
                      <td class="sku">
                        <label class="td-title">@T("ShoppingCart.SKU"):</label>
                        <span class="sku-number">@item.Sku</span>
                      </td>
                    }
                    @if (Model.ShowProductImages)
                    {
                      <td class="product-picture">
                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                      </td>
                    }
                    <td class="product">
                      <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                      @if (!String.IsNullOrEmpty(item.AttributeInfo))
                      {
                        <div class="attributes">
                          @Html.Raw(item.AttributeInfo)
                        </div>
                      }
                      @if (!String.IsNullOrEmpty(item.RecurringInfo))
                      {
                        <div class="recurring-info">
                          @Html.Raw(item.RecurringInfo)
                        </div>
                      }
                      @if (!String.IsNullOrEmpty(item.RentalInfo))
                      {
                        <div class="rental-info">
                          @Html.Raw(item.RentalInfo)
                        </div>
                      }
                      @if (Model.IsEditable && item.AllowItemEditing)
                      {
                        var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                        editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                        <div class="edit-item">
                          <a href="@editCartItemUrl">@T("Common.Edit")</a>
                        </div>
                      }
                      @if (item.Warnings.Count > 0)
                      {
                        <div class="message-error">
                          <ul>
                            @foreach (var warning in item.Warnings)
                            {
                              <li>@warning</li>
                            }
                          </ul>
                        </div>
                      }
                    </td>
                    <td class="unit-price">
                      <label class="td-title">@T("ShoppingCart.UnitPrice"):</label>
                      <span class="product-unit-price">@item.UnitPrice</span>
                    </td>
                    <td class="quantity">
                      <label class="td-title">@T("ShoppingCart.Quantity"):</label>
                      @if (Model.IsEditable)
                      {
                        if (item.AllowedQuantities.Count > 0)
                        {
                          <select name="itemquantity@(item.Id)" class="qty-dropdown">
                            @foreach (var qty in item.AllowedQuantities)
                            {
                              <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                            }
                          </select>
                        }
                        else
                        {
                          <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input" />
                        }

                      }
                      else
                      {
                        <span class="product-quantity">@item.Quantity</span>
                      }
                    </td>
                    <td class="subtotal">
                      <label class="td-title">@T("ShoppingCart.ItemTotal"):</label>
                      <span class="product-subtotal">@item.SubTotal</span>
                      @if (!String.IsNullOrEmpty(item.Discount))
                      {
                        <div class="discount">
                          @T("ShoppingCart.ItemYouSave"): @item.Discount
                        </div>
                      }
                    </td>
                  </tr>
                }
              </tbody>
            </table>
          </div>
          <div class="cart-options">
            @if (Model.IsEditable)
            {
              <div class="common-buttons">
                <input type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="button-2 update-cart-button" />
              </div>
            }
          </div>

          <div class="clearfix"></div>
        </div>
        <div class="white-space space-xmini"></div>
      </div>
    </div>
  }
}
<script type="text/javascript">
  $(document).ready(function () {
    $('#checkout').click(function () {
      //terms of service
      var termOfServiceOk = true;
      if ($('#termsofservice').length > 0) {
        //terms of service element exists
        if (!$('#termsofservice').is(':checked')) {
          $("#terms-of-service-warning-box").dialog();
          termOfServiceOk = false;
        } else {
          termOfServiceOk = true;
        }
      }
      return termOfServiceOk;
    });
  });
</script>